---
title: "Scoring the PID-5"
vignette: >
  %\VignetteIndexEntry{Scoring the PID-5}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
knitr:
  opts_chunk:
    collapse: true
    comment: '#>'
---

```{r}
#| include: false

library(tibble)
```

The Personality Inventory for DSM-5 (PID-5) instrument has 220 items and yields 25 facet scales, 5 domain scales, and 5 validity scales. We can demonstrate the package's functionality using some simulated data.

First, we load the package into memory using the `library()` function. If this doesn't work, make sure you installed the package properly (see the README on [GitHub](https://github.com/jmgirard/hitop)).

```{r}
library(hitop)
```

### Score simulated PID-5 data

The `sim_pid5` dataset is built into the package and can be loaded using the `data()` function. It contains 100 rows (each representing a simulated participant) and 220 columns named `pid_1` to `pid_220` (each representing an item from the PID-5).

```{r}
data("sim_pid5")
sim_pid5
```

To turn these item-level data into scale scores on the 25 facets and 5 domains, we can use the `score_pid5()` function. We will need to tell the function which columns contain our items and which version of the PID this is. There are several ways we can specify the items. First, we can provide the column numbers and use the `:` shortcut. In this tibble, the items are from column 1 to column 220 so we can use `items = 1:220`. I am going to also set `append = FALSE` so that you can quickly see the scale scores. I also can set the version to `"FULL"` (or leave that argument off, as that is the default, shown in the example example) to let it know we are using the full 220-item version.

```{r}
scores <- score_pid5(sim_pid5, items = 1:220, version = "FULL", append = FALSE)
scores
```

If I had instead set `append = TRUE` (or left it off, as that is the default), we would get back the `sim_pid5` tibble with the scale scores added to the end as extra columns. Notice below how we now have 245 columns instead of 220 or 25.

```{r}
scores <- score_pid5(sim_pid5, items = 1:220)
scores
```

Alternatively, we could provide the item column names as a character string. Typing out all 220 item names would be a hassle, but luckily this data named them consistently so we can build the names automatically using `sprintf()`. If we use the "pid_%d" format and apply that across the numbers 1 to 220, that will create the column names we need.

```{r}
scores <- score_pid5(sim_pid5, items = sprintf("pid_%d", 1:220))
scores
```

There are other useful arguments to the function that you can read about using its documentation by typing the following into your R console: `?score_pid5` or through the [package website](https://jmgirard.github.io/hitop/reference/score_pid5.html).

### Validity Scales for the PID-5

There are also several validity scales that have been developed for the full PID-5, including measures of overreporting, inconsistent responding, and positive impression management. We can use the simulated data to demonstrate the ability of the `validity_pid5()` function to calculate these scores and flag issues. The function arguments will be consistent with what we just learned. Note that, because the data is fake, we would expect there to be lots of validity issues.

```{r x2b}
validity_pid5(sim_pid5, items = 1:220, append = FALSE)
```
